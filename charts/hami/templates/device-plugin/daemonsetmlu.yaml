apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "4pd-vgpu.device-plugin" . }}-mlu
  labels:
    app.kubernetes.io/component: 4pd-device-plugin-mlu
    {{- include "4pd-vgpu.labels" . | nindent 4 }}
    {{- with .Values.global.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- if .Values.global.annotations }}
  annotations: {{ toYaml .Values.global.annotations | nindent 4}}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: 4pd-device-plugin-mlu
      {{- include "4pd-vgpu.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: 4pd-device-plugin-mlu
        4pd.io/webhook: ignore
        {{- include "4pd-vgpu.selectorLabels" . | nindent 8 }}
      {{- if .Values.devicePlugin.podAnnotations }}
      annotations: {{ toYaml .Values.devicePlugin.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- include "4pd-vgpu.imagePullSecrets" . | nindent 6}}
      serviceAccountName: {{ include "4pd-vgpu.device-plugin" . }}
      priorityClassName: system-node-critical
      hostPID: true
      hostNetwork: true
      containers:
        - name: cambricon-device-plugin-ctr
          image: {{ .Values.devicePlugin.image }}:{{ .Values.version }}
          imagePullPolicy: {{ .Values.devicePlugin.imagePullPolicy | quote }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","cp -f /k8s-vgpu/lib/mlu/smlu-containerd /usr/local/vgpu/"]
          command:
            - mlu-device-plugin
            - --mode=env-share #device plugin mode: default, sriov, env-share, mlu-share or topology-aware
            - --virtualization-num=10 #  virtualization number for each MLU, used only in sriov mode or env-share mode
            - --mlulink-policy=best-effort # MLULink topology policy: best-effort, guaranteed or restricted, used only in topology-aware mode
            - --cnmon-path=/usr/bin/cnmon # host machine cnmon path, must be absolute path. comment out this line to avoid mounting cnmon.
            #- --enable-console #uncomment to enable UART console device(/dev/ttyMS) in container
            #- --disable-health-check #uncomment to disable health check
            #- --enable-device-type #uncomment to enable device registration with type info
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOOK_PATH
              value: {{ .Values.devicePlugin.libPath }}
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              drop: ["ALL"]
              add: ["SYS_ADMIN"]
          volumeMounts:
            - name: device-plugin
              mountPath: /var/lib/kubelet/device-plugins
            - name: deviceconfig
              mountPath: /config
            - name: sysinfo
              mountPath: /sysinfo
            - name: lib
              mountPath: /usr/local/vgpu
      volumes:
        - name: device-plugin
          hostPath:
            path: {{ .Values.devicePlugin.pluginPath }}
        - name: sysinfo
          hostPath:
            path: /sys
        - name: deviceconfig
          configMap:
            name: {{ template "4pd-vgpu.device-plugin" . }}
        - name: lib
          hostPath:
            path: {{ .Values.devicePlugin.libPath }}
      {{- if .Values.devicePlugin.mlunodeSelector }}
      nodeSelector: {{ toYaml .Values.devicePlugin.mlunodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.devicePlugin.tolerations }}
      tolerations: {{ toYaml .Values.devicePlugin.tolerations | nindent 8 }}
      {{- end }}
